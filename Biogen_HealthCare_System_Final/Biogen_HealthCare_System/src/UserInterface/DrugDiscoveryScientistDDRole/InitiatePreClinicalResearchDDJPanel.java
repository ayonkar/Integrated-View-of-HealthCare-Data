/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.DrugDiscoveryScientistDDRole;

/**
 *
 * @author Lenovo
 */
import Business.Enterprise.Enterprise;
import Business.Organization.Organization;
import Business.Organization.ResearchAndDevelopment.DrugDiscoveryOrganisation;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.LabTestWorkRequest;
import Business.WorkQueue.PriclinicalWorkRequest;
import Business.WorkQueue.WorkRequest;
import Disease.Disease;
import Drug.NewDiscoveredDrug;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

public class InitiatePreClinicalResearchDDJPanel extends javax.swing.JPanel {

    private JPanel userprocesscontainer;
    private UserAccount userAccount;
    private Enterprise enterprise;
    private Organization organization;

    /**
     * Creates new form PreClinicalJPanel
     */
    public InitiatePreClinicalResearchDDJPanel(JPanel userprocesscontainer, DrugDiscoveryOrganisation organization, UserAccount userAccount, Enterprise enterprise) {
        initComponents();
        this.userprocesscontainer = userprocesscontainer;
        this.organization = organization;
        this.userAccount = userAccount;
        this.enterprise = enterprise;
        DrugDiscoveryOrganisation drugdd = (DrugDiscoveryOrganisation) organization;
        for (Disease disease : drugdd.getDd().getDisease()) {
            diseasejComboBox.addItem(disease);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        diseasejComboBox = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        InvitrojButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        drugjTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));

        diseasejComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                diseasejComboBoxActionPerformed(evt);
            }
        });

        jLabel5.setText("Disease");

        InvitrojButton.setText("Initiate In-Vitro Analysis");
        InvitrojButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InvitrojButtonActionPerformed(evt);
            }
        });

        drugjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "DrugID", "Drug Name", "Absorbility", "Status", "Active Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(drugjTable);

        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(InvitrojButton)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(41, 41, 41)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(diseasejComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(198, 198, 198)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 585, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(695, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(diseasejComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(69, 69, 69)
                .addComponent(InvitrojButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 102, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(293, 293, 293))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1300, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 650, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void diseasejComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_diseasejComboBoxActionPerformed
        // TODO add your handling code here:

        Disease d = (Disease) diseasejComboBox.getSelectedItem();
        DrugDiscoveryOrganisation drugdd = (DrugDiscoveryOrganisation) organization;
        for (Disease disease : drugdd.getDd().getDisease()) {
            if (disease.equals(d)) {
                populateTable(organization, disease);
            }

        }


    }//GEN-LAST:event_diseasejComboBoxActionPerformed

    private void InvitrojButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InvitrojButtonActionPerformed
        // TODO add your handling code here:

        int selectedRow = drugjTable.getSelectedRow();

        if (selectedRow >= 0) {

            NewDiscoveredDrug newDrug = (NewDiscoveredDrug) drugjTable.getValueAt(selectedRow, 1);
            DrugDiscoveryOrganisation drugdd = (DrugDiscoveryOrganisation) organization;
            PriclinicalWorkRequest priClinicalwr = new PriclinicalWorkRequest();
            // System.out.println("Size of PriClincal Work Queu"+drugdd.getPriclinicalWorkQueue().getWorkRequestList().size());
            drugdd.getPriclinicalWorkQueue().getWorkRequestList().add(priClinicalwr);
            CardLayout layout = (CardLayout) userprocesscontainer.getLayout();
            userprocesscontainer.add("InVitroTestJPanel", new InVitroTestRequestDDJPanel(userprocesscontainer, newDrug, organization, priClinicalwr, enterprise));
            layout.next(userprocesscontainer);
        } else {
            JOptionPane.showMessageDialog(null, "Please Select a Drug to Test");
        }


    }//GEN-LAST:event_InvitrojButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        userprocesscontainer.remove(this);
        Component[] componentArray = userprocesscontainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
//        DrugDiscoveryScientistWorkAreaJPanel dwjp = (DrugDiscoveryScientistWorkAreaJPanel) component;
//        dwjp.populateRequestTable();
        CardLayout layout = (CardLayout) userprocesscontainer.getLayout();
        layout.previous(userprocesscontainer);


    }//GEN-LAST:event_jButton1ActionPerformed

    public void populateTable(Organization organization, Disease d) {
        DefaultTableModel model = (DefaultTableModel) drugjTable.getModel();

        model.setRowCount(0);

        for (NewDiscoveredDrug newDrug : d.getNewDrugList()) {
            Object[] row = new Object[5];
            row[0] = newDrug.getDrugID();
            row[1] = newDrug;
            row[2] = newDrug.getAbsorbility();
            row[3] = newDrug.getStatus();
            row[4] = newDrug.getActiveDate();
            model.addRow(row);

        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton InvitrojButton;
    private javax.swing.JComboBox diseasejComboBox;
    private javax.swing.JTable drugjTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
