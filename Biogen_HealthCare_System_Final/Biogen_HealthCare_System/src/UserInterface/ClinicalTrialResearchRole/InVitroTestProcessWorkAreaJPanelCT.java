/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.ClinicalTrialResearchRole;

import Business.Enterprise.Enterprise;
import Business.Organization.ResearchAndDevelopment.ClinicalTrialsOrganisation;
import Business.Organization.ResearchAndDevelopment.DrugDiscoveryOrganisation;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.PriclinicalWorkRequest;
import Business.WorkQueue.WorkQueue;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Lenovo
 */
public class InVitroTestProcessWorkAreaJPanelCT extends javax.swing.JPanel {

    /**
     * Creates new form InVitroTestProcessWorkAreaJPanelCT
     */
  
    JPanel userProcessContainer;
    private UserAccount userAccount;
    private Enterprise enterprise;
    private ClinicalTrialsOrganisation clinicalTrialOrganization;
    InVitroTestProcessWorkAreaJPanelCT(JPanel userProcessContainer, ClinicalTrialsOrganisation clinicalTrialOrganization, UserAccount userAccount) {
       initComponents();
       this.userProcessContainer = userProcessContainer;
       this.clinicalTrialOrganization = clinicalTrialOrganization;
       this.userAccount = userAccount;
       populateTableRequest();
    }

   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        drugjTable = new javax.swing.JTable();
        processjButton = new javax.swing.JButton();
        assignJButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(153, 153, 153));

        drugjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Test ID", "DrugID", "Drug Name", "Receiver", "Status", "ETA ", "Priority"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(drugjTable);

        processjButton.setText("Process ");
        processjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processjButtonActionPerformed(evt);
            }
        });

        assignJButton.setText("Assign to me");
        assignJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignJButtonActionPerformed(evt);
            }
        });

        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(189, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(assignJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(processjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 569, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(542, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(processjButton)
                    .addComponent(assignJButton))
                .addGap(151, 151, 151)
                .addComponent(jButton1)
                .addContainerGap(162, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void assignJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignJButtonActionPerformed

        int selectedRow = drugjTable.getSelectedRow();

       if (selectedRow < 0){
           return;
       }

       PriclinicalWorkRequest request = (PriclinicalWorkRequest)drugjTable.getValueAt(selectedRow, 0);
        request.setReceiver(userAccount);
        request.setStatus("Assigned");
       populateTableRequest();

    }//GEN-LAST:event_assignJButtonActionPerformed

    private void processjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processjButtonActionPerformed
        // TODO add your handling code here:
        
         int selectedRow = drugjTable.getSelectedRow();

       if (selectedRow < 0){
           JOptionPane.showMessageDialog(null, "Please Select a Drug to Test");
           return;
       }
       else{
         
           
           PriclinicalWorkRequest pwr = (PriclinicalWorkRequest)drugjTable.getValueAt(selectedRow, 0);
           
        ProcessInVitroTestCTJPanel processinvitro = new ProcessInVitroTestCTJPanel(userProcessContainer,pwr);
        userProcessContainer.add("inVitroworkArea", processinvitro);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer); 
       }
    }//GEN-LAST:event_processjButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        //        DrugDiscoveryScientistWorkAreaJPanel dwjp = (DrugDiscoveryScientistWorkAreaJPanel) component;
        //        dwjp.populateRequestTable();
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);

    }//GEN-LAST:event_jButton1ActionPerformed


public void populateTableRequest(){
    
    
    DefaultTableModel model = (DefaultTableModel) drugjTable.getModel();

        model.setRowCount(0);  
        for (WorkRequest request : clinicalTrialOrganization.getPriclinicalWorkQueue().getWorkRequestList()) {
            PriclinicalWorkRequest pwr = (PriclinicalWorkRequest) request;
           
             
            Object[] row = new Object[7];
            row[0] = pwr;
            row[1] = pwr.getDrugID();
            row[2] = pwr.getDrugName();
            row[3] = request.getReceiver() == null ? "Not Assigned" : request.getReceiver();
            String statusInfo = pwr.getStatus();            
            row[4] = statusInfo == null ? "Waiting" : statusInfo;
            String result = pwr.getStatus();
            row[5] =  pwr.getEstimatedDayofDelivery();
            row[6] = pwr.getPriority();
            

            model.addRow(row);
        }
        if(model.getRowCount() <= 0){JOptionPane.showConfirmDialog(null,"No Tests available");}  
}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignJButton;
    private javax.swing.JTable drugjTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton processjButton;
    // End of variables declaration//GEN-END:variables
}
